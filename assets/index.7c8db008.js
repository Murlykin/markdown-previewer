import{R as e,m as t,p as n,a}from"./vendor.f7d4956c.js";const i=t=>e.createElement("div",{className:"toolbar"},e.createElement("h2",null,e.createElement("i",{className:"fab fa-free-code-camp"}),t.text),e.createElement("i",{className:t.icon,onClick:t.onClick}));t.setOptions({breaks:!0});const s=new t.Renderer;s.link=function(e,t,n){return`<a target="_blank" title="${n}" href="${e}">${n}</a>`};const r=a=>{const i=t(a.markdown,{renderer:s});return e.createElement("div",{id:"preview",dangerouslySetInnerHTML:{__html:n.sanitize(i)}})},o=t=>e.createElement("textarea",{id:"editor",onChange:t.onChange,value:t.markdown});class d extends e.Component{constructor(e){super(e),this.state={editorMax:!1,previewMax:!1,markdown:"# This is a heading (h1)\n## This is a sub-heading (h2)\n### This is a sub-sub-heading (h3)\n#### This is a sub-sub-sub-heading (h4)\n##### This is a sub-sub-sub-sub-heading (h5)\n###### This is a sub-sub-sub-sub-sub-heading (h6)\n \nHere's some code, `<div></div>`, between 2 backticks.\n```\n// this is multi-line code:\nfunction anotherExample(firstLine, lastLine) {\n  if (firstLine == '```' && lastLine == '```') {\n    return multiLineCode;\n  }\n}\n```\n\nYou can also make text **bold**... whoa!\nOr _italic_.\nOr... wait for it... **_both!_**\nAnd feel free to go crazy ~~crossing stuff out~~.\n\nThere's also [links](https://www.freecodecamp.com), and\n> Block Quotes!\n\nAnd if you want to get really crazy, even tables:\n\nWild Header  | Crazy Header  | Another Header?\n------------ | ------------- | -------------\nYour content | can be here,  | and it can be here....\nAnd here.    | Okay.         | I think we get it.\n\n- And of course there are lists.\n  - Some are bulleted.\n    - With different indentation levels.\n      - That look like this.\n\n1. And there are numbered lists too.\n1. Use just 1s if you want!\n1. And last but not least, let's not forget embedded images:\n\n![React Logo w/ Text](https://cdn.freecodecamp.org/testable-projects-fcc/images/fcc_secondary.svg)\n "},this.textChange=this.textChange.bind(this),this.editorSizeChange=this.editorSizeChange.bind(this),this.previewSizeChange=this.previewSizeChange.bind(this)}textChange(e){this.setState({markdown:e.target.value})}editorSizeChange(){this.setState({editorMax:!this.state.editorMax})}previewSizeChange(){this.setState({previewMax:!this.state.previewMax})}render(){const t=[{h1:"",editor:"wrap",preview:"wrap",icon:"fas fa-expand-arrows-alt fa-2x"},{h1:"hide",editor:"wrap max",preview:"wrap hide",icon:"fas fa-compress-arrows-alt fa-2x"},{h1:"hide",editor:"wrap hide",preview:"wrap max",icon:"fas fa-compress-arrows-alt fa-2x"}],n=this.state.editorMax?1:this.state.previewMax?2:0;return"hide"==t[n].h1?document.body.classList.add("overlay"):document.body.classList.contains("overlay")&&document.body.classList.remove("overlay"),e.createElement("div",null,e.createElement("h1",{className:t[n].h1},"Markdown Previewer"),e.createElement("div",{className:t[n].editor},e.createElement(i,{icon:t[n].icon,onClick:this.editorSizeChange,text:"Editor"}),e.createElement(o,{markdown:this.state.markdown,onChange:this.textChange})),e.createElement("div",{className:t[n].preview},e.createElement(i,{icon:t[n].icon,onClick:this.previewSizeChange,text:"Preview"}),e.createElement(r,{markdown:this.state.markdown})))}}a.render(e.createElement(d,null),document.getElementById("root"));
